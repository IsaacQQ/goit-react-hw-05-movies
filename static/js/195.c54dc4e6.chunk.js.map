{"version":3,"file":"static/js/195.c54dc4e6.chunk.js","mappings":"gTAEaA,EAAOC,EAAAA,GAAAA,GAAH,iLAQJC,EAAWD,EAAAA,GAAAA,GAAH,kGAMRE,EAASF,EAAAA,GAAAA,IAAH,yJAQNG,EAAQH,EAAAA,GAAAA,IAAH,0DAKLI,EAAcJ,EAAAA,GAAAA,KAAH,6CAIXK,EAAWL,EAAAA,GAAAA,EAAH,qG,SCyCrB,EA5Da,WACX,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAoBA,IAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAIF,EAAJ,CAIA,IAAMG,EAAY,mCAAG,8GAECC,EAAAA,EAAAA,IAASP,GAFV,OAEXQ,EAFW,OAIjBJ,EAASI,EAAIC,MAJI,gDAMjBC,QAAQC,IAAR,MANiB,yDAAH,qDAUlBL,GAZC,CAaF,GAAE,CAACH,EAAOH,IAENG,EAGL,OACE,8BACGA,EAAMS,OAAS,IACd,SAACnB,EAAD,UACGU,EAAMU,KAAI,SAAAJ,GACT,IAAQK,EAAkCL,EAAlCK,aAAcC,EAAoBN,EAApBM,UAAWC,EAASP,EAATO,KAE3BC,GAAYC,EAAAA,EAAAA,GAAcJ,GAEhC,OACE,UAACnB,EAAD,YACE,SAACC,EAAD,UACGkB,GACC,SAACjB,EAAD,CAAOsB,IAAKF,EAAWG,IAAKJ,KAE5B,SAAC,MAAD,CAAUK,KAAM,SAIpB,UAACtB,EAAD,YACE,SAACD,EAAD,oBADF,IACoCkB,MAEpC,UAACjB,EAAD,YACE,SAACD,EAAD,0BACCiB,OAdUN,EAAKa,GAkBvB,OAKV,C,uDCxED,IAAMC,EACO,8BADPA,EAEQ,QAICL,EAAgB,SAAAM,GAC3B,IAAiBC,EAAaF,EAE9B,MAAM,GAAN,OAF8BA,GAE9B,OAAoBE,GAApB,OAA+BD,EAChC,C","sources":["components/Cast/Cast.Styled.jsx","components/Cast/Cast.jsx","utils/getFullImgUrl.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 30px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 10px;\n  margin: 10px auto;\n`;\n\nexport const ListItem = styled.li`\n  list-style: none;\n  &:not(:last-child) {\n    margin-right: 5px;\n  }\n`;\nexport const ImgBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 300px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n`;\n\nexport const Avatr = styled.img`\n  width: 100%;\n  height: 300px;\n`;\n\nexport const AccentTitle = styled.span`\n  font-weight: 700;\n`;\n\nexport const InfoText = styled.p`\n  display: block;\n  font-weight: 400;\n  font-size: 12px;\n  padding: 1px;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCasts } from '../../api/api';\nimport { getFullImgUrl } from '../../utils/getFullImgUrl';\nimport { FaImages } from 'react-icons/fa';\nimport {\n  List,\n  ListItem,\n  Avatr,\n  AccentTitle,\n  InfoText,\n  ImgBox,\n} from './Cast.Styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState(null);\n\n  useEffect(() => {\n    if (casts) {\n      return;\n    }\n\n    const getCastsInfo = async () => {\n      try {\n        const res = await getCasts(movieId);\n\n        setCasts(res.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getCastsInfo();\n  }, [casts, movieId]);\n\n  if (!casts) {\n    return;\n  }\n  return (\n    <>\n      {casts.length > 0 && (\n        <List>\n          {casts.map(cast => {\n            const { profile_path, character, name } = cast;\n\n            const avatarImg = getFullImgUrl(profile_path);\n\n            return (\n              <ListItem key={cast.id}>\n                <ImgBox>\n                  {profile_path ? (\n                    <Avatr src={avatarImg} alt={name} />\n                  ) : (\n                    <FaImages size={100} />\n                  )}\n                </ImgBox>\n\n                <InfoText>\n                  <AccentTitle>Name:</AccentTitle> {name}\n                </InfoText>\n                <InfoText>\n                  <AccentTitle>Character: </AccentTitle>\n                  {character}\n                </InfoText>\n              </ListItem>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Cast;","const imgUrlConfig = {\n    baseUrl: 'https://image.tmdb.org/t/p/',\n    fileSize: 'w500/',\n    fileSizeOriginal: 'original',\n  };\n  \n  export const getFullImgUrl = filePath => {\n    const { baseUrl, fileSize } = imgUrlConfig;\n  \n    return `${baseUrl}${fileSize}${filePath}`;\n  };"],"names":["List","styled","ListItem","ImgBox","Avatr","AccentTitle","InfoText","movieId","useParams","useState","casts","setCasts","useEffect","getCastsInfo","getCasts","res","cast","console","log","length","map","profile_path","character","name","avatarImg","getFullImgUrl","src","alt","size","id","imgUrlConfig","filePath","fileSize"],"sourceRoot":""}